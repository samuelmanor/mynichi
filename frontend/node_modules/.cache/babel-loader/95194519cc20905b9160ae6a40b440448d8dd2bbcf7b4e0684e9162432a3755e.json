{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\n// import { useEffect } from \"react\";\n// import { Page } from \"./components/Page\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setCurrentPage } from \"./reducers/PageReducer\";\n// import { addPage } from \"./reducers/JournalReducer\";\n// import { getFormattedDate } from \"./utils/getFormattedDate\";\n// import { getTodaysPage } from \"./reducers/PageReducer\";\n// import { gql, useQuery } from \"@apollo/client\";\n// import { FIND_PAGE, GET_PAGE_COUNT } from \"./utils/queries\";\n\n// const TEST_QUERY = gql`\n//   query {\n//     pageCount\n//   }\n// `;\n\n// function App() {\n//   const today = getFormattedDate();\n//   // const todaysPage = useQuery(FIND_PAGE, {\n//   //   variables: {\n//   //     month: today.month,\n//   //     dayNum: today.day.number,\n//   //     year: today.year,\n//   //   },\n//   // });\n\n//   // useEffect(() => {\n//   //   if (todaysPage.data) {\n//   //     console.log(\"todaysPage\", todaysPage.data.findPage);\n//   //   }\n//   // }, [todaysPage]);\n//   const result = useQuery(GET_PAGE_COUNT);\n//   console.log(result);\n\n//   return (\n//     <div>\n//       <Page />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PAGE_COUNT } from \"./utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_PAGE_COUNT);\n  useEffect(() => {\n    if (error) {\n      console.error(\"ApolloError:\", error);\n    }\n  }, [error]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DPiDxt69cUhBYPvV4/kJqJLnSOA=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Page","useQuery","GET_PAGE_COUNT","jsxDEV","_jsxDEV","App","_s","data","loading","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","log","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["// import { useEffect } from \"react\";\n// import { Page } from \"./components/Page\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { setCurrentPage } from \"./reducers/PageReducer\";\n// import { addPage } from \"./reducers/JournalReducer\";\n// import { getFormattedDate } from \"./utils/getFormattedDate\";\n// import { getTodaysPage } from \"./reducers/PageReducer\";\n// import { gql, useQuery } from \"@apollo/client\";\n// import { FIND_PAGE, GET_PAGE_COUNT } from \"./utils/queries\";\n\n// const TEST_QUERY = gql`\n//   query {\n//     pageCount\n//   }\n// `;\n\n// function App() {\n//   const today = getFormattedDate();\n//   // const todaysPage = useQuery(FIND_PAGE, {\n//   //   variables: {\n//   //     month: today.month,\n//   //     dayNum: today.day.number,\n//   //     year: today.year,\n//   //   },\n//   // });\n\n//   // useEffect(() => {\n//   //   if (todaysPage.data) {\n//   //     console.log(\"todaysPage\", todaysPage.data.findPage);\n//   //   }\n//   // }, [todaysPage]);\n//   const result = useQuery(GET_PAGE_COUNT);\n//   console.log(result);\n\n//   return (\n//     <div>\n//       <Page />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PAGE_COUNT } from \"./utils/queries\";\n\nfunction App() {\n  const { data, loading, error } = useQuery(GET_PAGE_COUNT);\n\n  useEffect(() => {\n    if (error) {\n      console.error(\"ApolloError:\", error);\n    }\n  }, [error]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  console.log(data);\n\n  return (\n    <div>\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAACC,cAAc,CAAC;EAEzDH,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,EAAE;MACTC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,IAAID,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/CL,OAAO,CAACO,GAAG,CAACV,IAAI,CAAC;EAEjB,oBACEH,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACJ,IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACT,EAAA,CAnBQD,GAAG;EAAA,QACuBJ,QAAQ;AAAA;AAAAiB,EAAA,GADlCb,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}