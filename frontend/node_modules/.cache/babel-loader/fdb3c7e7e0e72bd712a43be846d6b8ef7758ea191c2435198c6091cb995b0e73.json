{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/frontend/src/components/HabitTracker/HabitTracker.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HabitTracker = () => {\n  // const currentPage = useSelector((state: any) => state.currentPage);\n  // const currentWeek = formatMonth(\n  //   currentPage.date.month,\n  //   currentPage.date.year\n  // )[currentPage.date.week - 1];\n\n  const findWeek = () => {\n    const date = new Date();\n    const today = {\n      day: {\n        number: date.getDate(),\n        name: date.toDateString().split(\" \")[0].toLowerCase()\n      },\n      month: date.getMonth() + 1,\n      year: date.getFullYear(),\n      week: date.getWeekOfMonth()\n    };\n\n    // const firstDayPosition = new Date(year, month - 1, 1).getDay();\n    // /** The total number of days in the given month. */\n    // const daysInMonth = new Date(year, month, 0).getDate();\n    // // console.log(firstDayPosition, daysInMonth);\n\n    // const weeksInMonth = Math.ceil((daysInMonth + firstDayPosition) / 7);\n\n    // find week of month that today is in\n    const firstDayOfMonth = new Date(today.year, today.month - 1, 1).getDay();\n    const daysInMonth = new Date(today.year, today.month, 0).getDate();\n    const weeksInMonth = Math.ceil((daysInMonth + firstDayOfMonth) / 7);\n\n    // if firstDayOfMonth is 0, then the first day of the month is a Sunday\n    for (let i = 0; i < weeksInMonth; i++) {\n      const week = Array.from({\n        length: 7\n      }, (_, i) => i + 1);\n      console.log(week);\n      if (week.includes(today.day.number)) {\n        return i + 1;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"habit tracker\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(findWeek()),\n      children: \"cl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = HabitTracker;\nvar _c;\n$RefreshReg$(_c, \"HabitTracker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HabitTracker","findWeek","date","Date","today","day","number","getDate","name","toDateString","split","toLowerCase","month","getMonth","year","getFullYear","week","getWeekOfMonth","firstDayOfMonth","getDay","daysInMonth","weeksInMonth","Math","ceil","i","Array","from","length","_","console","log","includes","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/frontend/src/components/HabitTracker/HabitTracker.tsx"],"sourcesContent":["import React from \"react\";\nimport { FC } from \"react\";\nimport { formatMonth } from \"../../utils/formatMonth\";\nimport { useSelector } from \"react-redux\";\n\ninterface HabitTrackerProps {}\n\nexport const HabitTracker: FC<HabitTrackerProps> = () => {\n  // const currentPage = useSelector((state: any) => state.currentPage);\n  // const currentWeek = formatMonth(\n  //   currentPage.date.month,\n  //   currentPage.date.year\n  // )[currentPage.date.week - 1];\n\n  const findWeek = () => {\n    const date = new Date();\n    const today = {\n      day: {\n        number: date.getDate(),\n        name: date.toDateString().split(\" \")[0].toLowerCase(),\n      },\n      month: date.getMonth() + 1,\n      year: date.getFullYear(),\n      week: date.getWeekOfMonth(),\n    };\n\n    // const firstDayPosition = new Date(year, month - 1, 1).getDay();\n    // /** The total number of days in the given month. */\n    // const daysInMonth = new Date(year, month, 0).getDate();\n    // // console.log(firstDayPosition, daysInMonth);\n\n    // const weeksInMonth = Math.ceil((daysInMonth + firstDayPosition) / 7);\n\n    // find week of month that today is in\n    const firstDayOfMonth = new Date(today.year, today.month - 1, 1).getDay();\n    const daysInMonth = new Date(today.year, today.month, 0).getDate();\n    const weeksInMonth = Math.ceil((daysInMonth + firstDayOfMonth) / 7);\n\n    // if firstDayOfMonth is 0, then the first day of the month is a Sunday\n    for (let i = 0; i < weeksInMonth; i++) {\n      const week = Array.from({ length: 7 }, (_, i) => i + 1);\n      console.log(week);\n      if (week.includes(today.day.number)) {\n        return i + 1;\n      }\n    }\n  };\n\n  return (\n    <div>\n      habit tracker\n      <button onClick={() => console.log(findWeek())}>cl</button>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,OAAO,MAAMC,YAAmC,GAAGA,CAAA,KAAM;EACvD;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvB,MAAMC,KAAK,GAAG;MACZC,GAAG,EAAE;QACHC,MAAM,EAAEJ,IAAI,CAACK,OAAO,CAAC,CAAC;QACtBC,IAAI,EAAEN,IAAI,CAACO,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;MACtD,CAAC;MACDC,KAAK,EAAEV,IAAI,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC;MAC1BC,IAAI,EAAEZ,IAAI,CAACa,WAAW,CAAC,CAAC;MACxBC,IAAI,EAAEd,IAAI,CAACe,cAAc,CAAC;IAC5B,CAAC;;IAED;IACA;IACA;IACA;;IAEA;;IAEA;IACA,MAAMC,eAAe,GAAG,IAAIf,IAAI,CAACC,KAAK,CAACU,IAAI,EAAEV,KAAK,CAACQ,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACO,MAAM,CAAC,CAAC;IACzE,MAAMC,WAAW,GAAG,IAAIjB,IAAI,CAACC,KAAK,CAACU,IAAI,EAAEV,KAAK,CAACQ,KAAK,EAAE,CAAC,CAAC,CAACL,OAAO,CAAC,CAAC;IAClE,MAAMc,YAAY,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACH,WAAW,GAAGF,eAAe,IAAI,CAAC,CAAC;;IAEnE;IACA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,EAAEG,CAAC,EAAE,EAAE;MACrC,MAAMR,IAAI,GAAGS,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAEJ,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;MACvDK,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACe,QAAQ,CAAC3B,KAAK,CAACC,GAAG,CAACC,MAAM,CAAC,EAAE;QACnC,OAAOkB,CAAC,GAAG,CAAC;MACd;IACF;EACF,CAAC;EAED,oBACEzB,OAAA;IAAAiC,QAAA,GAAK,eAEH,eAAAjC,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAACC,GAAG,CAAC7B,QAAQ,CAAC,CAAC,CAAE;MAAA+B,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACC,EAAA,GA/CWtC,YAAmC;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}