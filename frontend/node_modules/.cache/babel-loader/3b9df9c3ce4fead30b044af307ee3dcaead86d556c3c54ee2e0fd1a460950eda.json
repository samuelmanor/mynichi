{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage } from \"./reducers/PageReducer\";\nimport { addPage } from \"./reducers/JournalReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { getTodaysPage } from \"./reducers/PageReducer\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FIND_PAGE, GET_PAGE_COUNT } from \"./utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEST_QUERY = gql`\n  query {\n    pageCount\n  }\n`;\nfunction App() {\n  _s();\n  const today = getFormattedDate();\n  // const todaysPage = useQuery(FIND_PAGE, {\n  //   variables: {\n  //     month: today.month,\n  //     dayNum: today.day.number,\n  //     year: today.year,\n  //   },\n  // });\n\n  // useEffect(() => {\n  //   if (todaysPage.data) {\n  //     console.log(\"todaysPage\", todaysPage.data.findPage);\n  //   }\n  // }, [todaysPage]);\n  const result = useQuery(TEST_QUERY);\n  if (result.loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 30\n  }, this);\n  if (result.error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }, this);\n  if (result.data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: result.data.pageCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Page","useDispatch","useSelector","setCurrentPage","addPage","getFormattedDate","getTodaysPage","gql","useQuery","FIND_PAGE","GET_PAGE_COUNT","jsxDEV","_jsxDEV","TEST_QUERY","App","_s","today","result","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","data","pageCount","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage } from \"./reducers/PageReducer\";\nimport { addPage } from \"./reducers/JournalReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { getTodaysPage } from \"./reducers/PageReducer\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FIND_PAGE, GET_PAGE_COUNT } from \"./utils/queries\";\n\nconst TEST_QUERY = gql`\n  query {\n    pageCount\n  }\n`;\n\nfunction App() {\n  const today = getFormattedDate();\n  // const todaysPage = useQuery(FIND_PAGE, {\n  //   variables: {\n  //     month: today.month,\n  //     dayNum: today.day.number,\n  //     year: today.year,\n  //   },\n  // });\n\n  // useEffect(() => {\n  //   if (todaysPage.data) {\n  //     console.log(\"todaysPage\", todaysPage.data.findPage);\n  //   }\n  // }, [todaysPage]);\n  const result = useQuery(TEST_QUERY);\n\n  if (result.loading) return <p>Loading...</p>;\n  if (result.error) return <p>Error</p>;\n  if (result.data) return <p>{result.data.pageCount}</p>;\n\n  return (\n    <div>\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,EAAEC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,UAAU,GAAGN,GAAG;AACtB;AACA;AACA;AACA,CAAC;AAED,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAGX,gBAAgB,CAAC,CAAC;EAChC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAMY,MAAM,GAAGT,QAAQ,CAACK,UAAU,CAAC;EAEnC,IAAII,MAAM,CAACC,OAAO,EAAE,oBAAON,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC5C,IAAIN,MAAM,CAACO,KAAK,EAAE,oBAAOZ,OAAA;IAAAO,QAAA,EAAG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,MAAM,CAACQ,IAAI,EAAE,oBAAOb,OAAA;IAAAO,QAAA,EAAIF,MAAM,CAACQ,IAAI,CAACC;EAAS;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEtD,oBACEX,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACZ,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACR,EAAA,CA1BQD,GAAG;EAAA,QAeKN,QAAQ;AAAA;AAAAmB,EAAA,GAfhBb,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}