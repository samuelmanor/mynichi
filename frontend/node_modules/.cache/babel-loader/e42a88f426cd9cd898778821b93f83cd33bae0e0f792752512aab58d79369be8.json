{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// @ts-ignore\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\n\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(currentPage),\n      children: \"current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"WlHA7gHpG/ANUkX1PEvok4i3Uvc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["React","useDispatch","useSelector","getFormattedDate","jsxDEV","_jsxDEV","NavArrow","_s","dispatch","today","currentPage","state","children","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  return (\n    <div>\n      <button onClick={() => console.log(currentPage)}>current</button>\n    </div>\n  );\n};\n"],"mappings":";;AACA,OAAOA,KAAK,MAA+B,OAAO;;AAElD;;AAEA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;;AAEA,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhE,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,KAAK,GAAGN,gBAAgB,CAAC,CAAC;;EAEhC;EACA,MAAMO,WAAW,GAAGR,WAAW,CAAES,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;EAElE,oBACEL,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAQQ,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACL,WAAW,CAAE;MAAAE,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACZ,EAAA,CAbWD,QAA2B;EAAA,QACrBL,WAAW,EAKRC,WAAW;AAAA;AAAAkB,EAAA,GANpBd,QAA2B;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}