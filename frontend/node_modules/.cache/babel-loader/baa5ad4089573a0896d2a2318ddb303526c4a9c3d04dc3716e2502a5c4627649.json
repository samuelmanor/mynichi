{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport { useLazyQuery } from \"@apollo/client\";\nimport React from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\n\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      if (data.getNextPage) {\n        // dispatch(setCurrentPage(data.getNextPage));\n        console.log(data.getNextPage);\n      }\n    }\n  });\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      if (data.getPreviousPage) {\n        // dispatch(setCurrentPage(data.getPreviousPage));\n        console.log(data.getPreviousPage);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getPreviousPage(),\n      children: \"get previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(currentPage),\n      children: \"current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNextPage(),\n      children: \"get next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"UhMbMeiQkXPQnVUA9Ntmgui8Gy8=\", false, function () {\n  return [useDispatch, useSelector, useLazyQuery, useLazyQuery];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["useLazyQuery","React","GET_NEXT_PAGE","GET_PREVIOUS_PAGE","useDispatch","useSelector","getFormattedDate","jsxDEV","_jsxDEV","NavArrow","_s","dispatch","today","currentPage","state","getNextPage","variables","id","onCompleted","data","console","log","getPreviousPage","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      if (data.getNextPage) {\n        // dispatch(setCurrentPage(data.getNextPage));\n        console.log(data.getNextPage);\n      }\n    },\n  });\n\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      if (data.getPreviousPage) {\n        // dispatch(setCurrentPage(data.getPreviousPage));\n        console.log(data.getPreviousPage);\n      }\n    },\n  });\n\n  return (\n    <div>\n      <button onClick={() => getPreviousPage()}>get previous</button>\n      <button onClick={() => console.log(currentPage)}>current</button>\n      <button onClick={() => getNextPage()}>get next</button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,YAAY,QAAkB,gBAAgB;AACvD,OAAOC,KAAK,MAA+B,OAAO;AAElD;AACA,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,qBAAqB;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;;AAEA,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhE,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,KAAK,GAAGN,gBAAgB,CAAC,CAAC;;EAEhC;EACA,MAAMO,WAAW,GAAGR,WAAW,CAAES,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;EAElE,MAAM,CAACE,WAAW,CAAC,GAAGf,YAAY,CAACE,aAAa,EAAE;IAChDc,SAAS,EAAE;MAAEC,EAAE,EAAEJ,WAAW,CAACI;IAAG,CAAC;IACjCC,WAAW,EAAGC,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACJ,WAAW,EAAE;QACpB;QACAK,OAAO,CAACC,GAAG,CAACF,IAAI,CAACJ,WAAW,CAAC;MAC/B;IACF;EACF,CAAC,CAAC;EAEF,MAAM,CAACO,eAAe,CAAC,GAAGtB,YAAY,CAACG,iBAAiB,EAAE;IACxDa,SAAS,EAAE;MAAEC,EAAE,EAAEJ,WAAW,CAACI;IAAG,CAAC;IACjCC,WAAW,EAAGC,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACG,eAAe,EAAE;QACxB;QACAF,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,eAAe,CAAC;MACnC;IACF;EACF,CAAC,CAAC;EAEF,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMF,eAAe,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DpB,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAACC,GAAG,CAACR,WAAW,CAAE;MAAAU,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEpB,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCWD,QAA2B;EAAA,QACrBL,WAAW,EAKRC,WAAW,EAETL,YAAY,EAURA,YAAY;AAAA;AAAA6B,EAAA,GAlB3BpB,QAA2B;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}