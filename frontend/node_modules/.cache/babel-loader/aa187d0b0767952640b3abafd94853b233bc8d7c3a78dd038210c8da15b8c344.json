{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport { useLazyQuery } from \"@apollo/client\";\nimport React, { useState } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\n\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  const [onLastPage, setOnLastPage] = useState(false);\n  const [onFirstPage, setOnFirstPage] = useState(false);\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      // if (data.getNextPage) {\n      //   console.log(data.getNextPage);\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      console.log(data.getNextPage);\n    }\n  });\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      // if (data.getPreviousPage) {\n      //   console.log(data.getPreviousPage);\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      console.log(data.getPreviousPage);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getPreviousPage(),\n      disabled: onFirstPage,\n      children: \"get previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(currentPage),\n      children: \"current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNextPage(),\n      disabled: onLastPage,\n      children: \"get next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"NvIEu5LsdN/brlRaQtHsO5BsqSA=\", false, function () {\n  return [useDispatch, useSelector, useLazyQuery, useLazyQuery];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["useLazyQuery","React","useState","GET_NEXT_PAGE","GET_PREVIOUS_PAGE","useDispatch","useSelector","getFormattedDate","jsxDEV","_jsxDEV","NavArrow","_s","onLastPage","setOnLastPage","onFirstPage","setOnFirstPage","dispatch","today","currentPage","state","getNextPage","variables","id","onCompleted","data","console","log","getPreviousPage","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  const [onLastPage, setOnLastPage] = useState(false);\n  const [onFirstPage, setOnFirstPage] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      // if (data.getNextPage) {\n      //   console.log(data.getNextPage);\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      console.log(data.getNextPage);\n    },\n  });\n\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      // if (data.getPreviousPage) {\n      //   console.log(data.getPreviousPage);\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      console.log(data.getPreviousPage);\n    },\n  });\n\n  return (\n    <div>\n      <button onClick={() => getPreviousPage()} disabled={onFirstPage}>\n        get previous\n      </button>\n      <button onClick={() => console.log(currentPage)}>current</button>\n      <button onClick={() => getNextPage()} disabled={onLastPage}>\n        get next\n      </button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,YAAY,QAAkB,gBAAgB;AACvD,OAAOC,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAElD;AACA,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,qBAAqB;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;;AAEA,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhE,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,KAAK,GAAGV,gBAAgB,CAAC,CAAC;;EAEhC;EACA,MAAMW,WAAW,GAAGZ,WAAW,CAAEa,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;EAElE,MAAM,CAACE,WAAW,CAAC,GAAGpB,YAAY,CAACG,aAAa,EAAE;IAChDkB,SAAS,EAAE;MAAEC,EAAE,EAAEJ,WAAW,CAACI;IAAG,CAAC;IACjCC,WAAW,EAAGC,IAAI,IAAK;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACJ,WAAW,CAAC;IAC/B;EACF,CAAC,CAAC;EAEF,MAAM,CAACO,eAAe,CAAC,GAAG3B,YAAY,CAACI,iBAAiB,EAAE;IACxDiB,SAAS,EAAE;MAAEC,EAAE,EAAEJ,WAAW,CAACI;IAAG,CAAC;IACjCC,WAAW,EAAGC,IAAI,IAAK;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,eAAe,CAAC;IACnC;EACF,CAAC,CAAC;EAEF,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMF,eAAe,CAAC,CAAE;MAACG,QAAQ,EAAEhB,WAAY;MAAAc,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAACC,GAAG,CAACR,WAAW,CAAE;MAAAU,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjEzB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAE;MAACU,QAAQ,EAAElB,UAAW;MAAAgB,QAAA,EAAC;IAE5D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlDWD,QAA2B;EAAA,QAIrBL,WAAW,EAKRC,WAAW,EAETN,YAAY,EAcRA,YAAY;AAAA;AAAAmC,EAAA,GAzB3BzB,QAA2B;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}