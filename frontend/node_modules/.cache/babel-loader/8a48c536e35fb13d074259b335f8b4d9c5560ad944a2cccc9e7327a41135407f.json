{"ast":null,"code":"/**\n * Returns the current date in the format of the Date type.\n * @returns { Date } The current date.\n */\nexport const getFormattedDate = () => {\n  const today = new Date();\n  return {\n    day: {\n      number: today.getDate(),\n      name: today.toDateString().split(\" \")[0].toLowerCase()\n    },\n    month: today.getMonth() + 1,\n    year: today.getFullYear(),\n    week: Math.floor((today.getDate() + today.getDay()) / 7) + 1\n  };\n};","map":{"version":3,"names":["getFormattedDate","today","Date","day","number","getDate","name","toDateString","split","toLowerCase","month","getMonth","year","getFullYear","week","Math","floor","getDay"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/utils/getFormattedDate.ts"],"sourcesContent":["export type FormattedDate = {\n  month: number;\n  week: number;\n  day: {\n    number: number;\n    name: string;\n  };\n  year: number;\n};\n\n/**\n * Returns the current date in the format of the Date type.\n * @returns { Date } The current date.\n */\nexport const getFormattedDate = (): FormattedDate => {\n  const today = new Date();\n  return {\n    day: {\n      number: today.getDate(),\n      name: today.toDateString().split(\" \")[0].toLowerCase(),\n    },\n    month: today.getMonth() + 1,\n    year: today.getFullYear(),\n    week: Math.floor((today.getDate() + today.getDay()) / 7) + 1,\n  };\n};\n"],"mappings":"AAUA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAqB;EACnD,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,OAAO;IACLC,GAAG,EAAE;MACHC,MAAM,EAAEH,KAAK,CAACI,OAAO,CAAC,CAAC;MACvBC,IAAI,EAAEL,KAAK,CAACM,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;IACvD,CAAC;IACDC,KAAK,EAAET,KAAK,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC3BC,IAAI,EAAEX,KAAK,CAACY,WAAW,CAAC,CAAC;IACzBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAAC,CAACf,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAACgB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG;EAC7D,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}