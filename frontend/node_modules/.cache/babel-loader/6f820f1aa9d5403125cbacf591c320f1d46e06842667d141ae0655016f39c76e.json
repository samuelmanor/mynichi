{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx\";\nimport React from \"react\";\n\n// @ts-ignore\n\n// @ts-ignore\n\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  // const dispatch = useDispatch();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  // const currentPage = useSelector((state: any) => state.currentPage);\n\n  // const previousDayExists = () => {\n  //   const previousDay = availablePages.data.getAvailablePages.find(\n  //     (page: Page) => {\n  //       return (\n  //         page.month === currentPage.date.month &&\n  //         page.day.number === currentPage.date.day.number - 1\n  //       );\n  //     }\n  //   );\n\n  //   if (previousDay) {\n  //     console.log(previousDay);\n  //     return true;\n  //   } else {\n  //     console.log(\"No previous day\");\n  //     return false;\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NavArrow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_AVAILABLE_PAGES } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { Page } from \"../../utils/gql\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  // const dispatch = useDispatch();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  // const currentPage = useSelector((state: any) => state.currentPage);\n\n  // const previousDayExists = () => {\n  //   const previousDay = availablePages.data.getAvailablePages.find(\n  //     (page: Page) => {\n  //       return (\n  //         page.month === currentPage.date.month &&\n  //         page.day.number === currentPage.date.day.number - 1\n  //       );\n  //     }\n  //   );\n\n  //   if (previousDay) {\n  //     console.log(previousDay);\n  //     return true;\n  //   } else {\n  //     console.log(\"No previous day\");\n  //     return false;\n  //   }\n  // };\n\n  return (\n    <div>\n      {/* <button style={{ display: previousDayExists() === true ? \"\" : \"none\" }}>\n        go back\n      </button> */}\n    </div>\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAGA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAC/C;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIK,CAAC;AAEV,CAAC;AAACC,EAAA,GAhCWL,QAA2B;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}