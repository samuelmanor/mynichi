{"ast":null,"code":"/**\n * Returns the current date in the format of the Date type.\n * @returns {Date} The current date.\n */\nexport const getFormattedDate = () => {\n  return {\n    day: {\n      number: new Date().getDate(),\n      name: new Date().toDateString().split(\" \")[0].toLowerCase()\n    },\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n    week: Math.floor((new Date().getDate() + new Date().getDay()) / 7) + 1\n  };\n};","map":{"version":3,"names":["getFormattedDate","day","number","Date","getDate","name","toDateString","split","toLowerCase","month","getMonth","year","getFullYear","week","Math","floor","getDay"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/utils/getFormattedDate.ts"],"sourcesContent":["export type FormattedDate = {\n  month: number;\n  week: number;\n  day: {\n    number: number;\n    name: string;\n  };\n  year: number;\n};\n\n/**\n * Returns the current date in the format of the Date type.\n * @returns {Date} The current date.\n */\nexport const getFormattedDate = (): FormattedDate => {\n  return {\n    day: {\n      number: new Date().getDate(),\n      name: new Date().toDateString().split(\" \")[0].toLowerCase(),\n    },\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n    week: Math.floor((new Date().getDate() + new Date().getDay()) / 7) + 1,\n  };\n};\n"],"mappings":"AAUA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAqB;EACnD,OAAO;IACLC,GAAG,EAAE;MACHC,MAAM,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC5BC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,YAAY,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;IAC5D,CAAC;IACDC,KAAK,EAAE,IAAIN,IAAI,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC;IAChCC,IAAI,EAAE,IAAIR,IAAI,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC;IAC9BC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAAC,CAAC,IAAIZ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAACa,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG;EACvE,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}