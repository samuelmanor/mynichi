{"ast":null,"code":"// uses given date to return a 2d array of the month's days\n\nexport const formatMonth = date => {\n  // const month = date.month;\n  // const year = date.year;\n  // const firstDay = new Date(year, month - 1, 1).getDay();\n  // const lastDay = new Date(year, month, 0).getDate();\n  // const monthArray: number[][] = [];\n  // let weekArray: number[] = [];\n  // let day = 1;\n\n  // for (let i = 0; i < firstDay; i++) {\n  //   weekArray.push(0);\n  // }\n\n  // while (day <= lastDay) {\n  //   weekArray.push(day);\n  //   day++;\n  //   if (weekArray.length === 7) {\n  //     monthArray.push(weekArray);\n  //     weekArray = [];\n  //   }\n  // }\n\n  // while (weekArray.length < 7) {\n  //   weekArray.push(0);\n  // }\n\n  // monthArray.push(weekArray);\n\n  console.log(date);\n  const month = date.month;\n  const year = date.year;\n  /** The day of the week that the first day of the month falls on. 0 is Sunday, 6 is Saturday. */\n  const firstDayPosition = new Date(year, month - 1, 1).getDay();\n  /** The total number of days in the given month. */\n  const daysInMonth = new Date(year, month, 0).getDate();\n  console.log(firstDayPosition, daysInMonth);\n  let monthArray = [];\n  let weekArray = [];\n  for (let i = 0; i < firstDayPosition; i++) {\n    weekArray.push(0);\n  }\n  return [[]];\n};","map":{"version":3,"names":["formatMonth","date","console","log","month","year","firstDayPosition","Date","getDay","daysInMonth","getDate","monthArray","weekArray","i","push"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/utils/formatMonth.ts"],"sourcesContent":["// uses given date to return a 2d array of the month's days\n\nimport { FormattedDate } from \"./getFormattedDate\";\n\nexport const formatMonth = (date: FormattedDate): number[][] => {\n  // const month = date.month;\n  // const year = date.year;\n  // const firstDay = new Date(year, month - 1, 1).getDay();\n  // const lastDay = new Date(year, month, 0).getDate();\n  // const monthArray: number[][] = [];\n  // let weekArray: number[] = [];\n  // let day = 1;\n\n  // for (let i = 0; i < firstDay; i++) {\n  //   weekArray.push(0);\n  // }\n\n  // while (day <= lastDay) {\n  //   weekArray.push(day);\n  //   day++;\n  //   if (weekArray.length === 7) {\n  //     monthArray.push(weekArray);\n  //     weekArray = [];\n  //   }\n  // }\n\n  // while (weekArray.length < 7) {\n  //   weekArray.push(0);\n  // }\n\n  // monthArray.push(weekArray);\n\n  console.log(date);\n  const month = date.month;\n  const year = date.year;\n  /** The day of the week that the first day of the month falls on. 0 is Sunday, 6 is Saturday. */\n  const firstDayPosition = new Date(year, month - 1, 1).getDay();\n  /** The total number of days in the given month. */\n  const daysInMonth = new Date(year, month, 0).getDate();\n  console.log(firstDayPosition, daysInMonth);\n\n  let monthArray: number[][] = [];\n  let weekArray: number[] = [];\n\n  for (let i = 0; i < firstDayPosition; i++) {\n    weekArray.push(0);\n  }\n\n  return [[]];\n};\n"],"mappings":"AAAA;;AAIA,OAAO,MAAMA,WAAW,GAAIC,IAAmB,IAAiB;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,MAAMG,KAAK,GAAGH,IAAI,CAACG,KAAK;EACxB,MAAMC,IAAI,GAAGJ,IAAI,CAACI,IAAI;EACtB;EACA,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACF,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;EAC9D;EACA,MAAMC,WAAW,GAAG,IAAIF,IAAI,CAACF,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACM,OAAO,CAAC,CAAC;EACtDR,OAAO,CAACC,GAAG,CAACG,gBAAgB,EAAEG,WAAW,CAAC;EAE1C,IAAIE,UAAsB,GAAG,EAAE;EAC/B,IAAIC,SAAmB,GAAG,EAAE;EAE5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,gBAAgB,EAAEO,CAAC,EAAE,EAAE;IACzCD,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;EACnB;EAEA,OAAO,CAAC,EAAE,CAAC;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}