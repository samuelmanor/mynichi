{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst pageSlice = createSlice({\n  name: \"pages\",\n  initialState: {\n    currentPage: {\n      id: 0,\n      date: {\n        day: {\n          name: \"\",\n          number: 0\n        },\n        week: 0,\n        month: 0,\n        year: 0\n      }\n    },\n    pageCount: 0\n  },\n  reducers: {\n    setCurrentPage(state, action) {\n      console.log(\"setCurrentPage\", action.payload);\n      state.currentPage.id = action.payload.id;\n      state.currentPage.date = {\n        day: {\n          name: action.payload.date.day.name,\n          number: action.payload.date.day.number\n        },\n        week: action.payload.date.week,\n        month: action.payload.date.month,\n        year: action.payload.date.year\n      };\n    }\n  },\n  setPageCount(state, action) {\n    // state.pageCount = action.payload;\n    state.pageCount = action.payload;\n  }\n});\nexport const {\n  setCurrentPage,\n  setPageCount\n} = pageSlice.actions;\nexport default pageSlice.reducer;","map":{"version":3,"names":["createSlice","pageSlice","name","initialState","currentPage","id","date","day","number","week","month","year","pageCount","reducers","setCurrentPage","state","action","console","log","payload","setPageCount","actions","reducer"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/reducers/PageReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst pageSlice = createSlice({\n  name: \"pages\",\n  initialState: {\n    currentPage: {\n      id: 0,\n      date: {\n        day: {\n          name: \"\",\n          number: 0,\n        },\n        week: 0,\n        month: 0,\n        year: 0,\n      },\n    },\n    pageCount: 0,\n  },\n  reducers: {\n    setCurrentPage(state, action) {\n      console.log(\"setCurrentPage\", action.payload);\n      state.currentPage.id = action.payload.id;\n      state.currentPage.date = {\n        day: {\n          name: action.payload.date.day.name,\n          number: action.payload.date.day.number,\n        },\n        week: action.payload.date.week,\n        month: action.payload.date.month,\n        year: action.payload.date.year,\n      };\n    },\n  },\n  setPageCount(state, action) {\n    // state.pageCount = action.payload;\n    state.pageCount = action.payload;\n  },\n});\n\nexport const { setCurrentPage, setPageCount } = pageSlice.actions;\n\nexport default pageSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAE;MACXC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;QACJC,GAAG,EAAE;UACHL,IAAI,EAAE,EAAE;UACRM,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,MAAM,CAACG,OAAO,CAAC;MAC7CJ,KAAK,CAACX,WAAW,CAACC,EAAE,GAAGW,MAAM,CAACG,OAAO,CAACd,EAAE;MACxCU,KAAK,CAACX,WAAW,CAACE,IAAI,GAAG;QACvBC,GAAG,EAAE;UACHL,IAAI,EAAEc,MAAM,CAACG,OAAO,CAACb,IAAI,CAACC,GAAG,CAACL,IAAI;UAClCM,MAAM,EAAEQ,MAAM,CAACG,OAAO,CAACb,IAAI,CAACC,GAAG,CAACC;QAClC,CAAC;QACDC,IAAI,EAAEO,MAAM,CAACG,OAAO,CAACb,IAAI,CAACG,IAAI;QAC9BC,KAAK,EAAEM,MAAM,CAACG,OAAO,CAACb,IAAI,CAACI,KAAK;QAChCC,IAAI,EAAEK,MAAM,CAACG,OAAO,CAACb,IAAI,CAACK;MAC5B,CAAC;IACH;EACF,CAAC;EACDS,YAAYA,CAACL,KAAK,EAAEC,MAAM,EAAE;IAC1B;IACAD,KAAK,CAACH,SAAS,GAAGI,MAAM,CAACG,OAAO;EAClC;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,cAAc;EAAEM;AAAa,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AAEjE,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}