{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { NavArrow } from \"./components/NavArrow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage, setPageCount } from \"./reducers/PageReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport { FIND_PAGE, ADD_PAGE, GET_PAGE_COUNT, GET_AVAILABLE_PAGES } from \"./utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n  const [getTodaysPage, {\n    result,\n    data,\n    loading\n  }] = useMutation(ADD_PAGE, {\n    refetchQueries: [{\n      query: GET_PAGE_COUNT,\n      GET_AVAILABLE_PAGES\n    }],\n    variables: {\n      month: today.month,\n      dayName: today.day.name,\n      dayNum: today.day.number,\n      year: today.year\n    },\n    onCompleted: data => {\n      dispatch(setCurrentPage(data.addPage));\n    }\n  });\n  const pageCount = useQuery(GET_PAGE_COUNT);\n  useEffect(() => {\n    getTodaysPage();\n    if (pageCount.loading === false) {\n      // dispatch(setPageCount(pageCount.data.pageCount));\n      console.log(pageCount.data.pageCount);\n      dispatch(setPageCount(1));\n    }\n  }, [getTodaysPage, pageCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LMHCGhnAHkVUmeo14R48o0WOEas=\", false, function () {\n  return [useDispatch, useMutation, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Page","NavArrow","useDispatch","useSelector","setCurrentPage","setPageCount","getFormattedDate","gql","useMutation","useQuery","FIND_PAGE","ADD_PAGE","GET_PAGE_COUNT","GET_AVAILABLE_PAGES","jsxDEV","_jsxDEV","App","_s","dispatch","today","getTodaysPage","result","data","loading","refetchQueries","query","variables","month","dayName","day","name","dayNum","number","year","onCompleted","addPage","pageCount","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { NavArrow } from \"./components/NavArrow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage, setPageCount } from \"./reducers/PageReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  FIND_PAGE,\n  ADD_PAGE,\n  GET_PAGE_COUNT,\n  GET_AVAILABLE_PAGES,\n} from \"./utils/queries\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n  const [getTodaysPage, { result, data, loading }] = useMutation(ADD_PAGE, {\n    refetchQueries: [{ query: GET_PAGE_COUNT, GET_AVAILABLE_PAGES }],\n    variables: {\n      month: today.month,\n      dayName: today.day.name,\n      dayNum: today.day.number,\n      year: today.year,\n    },\n    onCompleted: (data) => {\n      dispatch(setCurrentPage(data.addPage));\n    },\n  });\n\n  const pageCount = useQuery(GET_PAGE_COUNT);\n\n  useEffect(() => {\n    getTodaysPage();\n    if (pageCount.loading === false) {\n      // dispatch(setPageCount(pageCount.data.pageCount));\n      console.log(pageCount.data.pageCount);\n      dispatch(setPageCount(1));\n    }\n  }, [getTodaysPage, pageCount]);\n\n  return (\n    <div>\n      <Page />\n      <NavArrow />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,YAAY,QAAQ,wBAAwB;AACrE,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,GAAG,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,gBAAgB;AAC3D,SACEC,SAAS,EACTC,QAAQ,EACRC,cAAc,EACdC,mBAAmB,QACd,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,KAAK,GAAGb,gBAAgB,CAAC,CAAC;EAChC,MAAM,CAACc,aAAa,EAAE;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,CAAC,GAAGf,WAAW,CAACG,QAAQ,EAAE;IACvEa,cAAc,EAAE,CAAC;MAAEC,KAAK,EAAEb,cAAc;MAAEC;IAAoB,CAAC,CAAC;IAChEa,SAAS,EAAE;MACTC,KAAK,EAAER,KAAK,CAACQ,KAAK;MAClBC,OAAO,EAAET,KAAK,CAACU,GAAG,CAACC,IAAI;MACvBC,MAAM,EAAEZ,KAAK,CAACU,GAAG,CAACG,MAAM;MACxBC,IAAI,EAAEd,KAAK,CAACc;IACd,CAAC;IACDC,WAAW,EAAGZ,IAAI,IAAK;MACrBJ,QAAQ,CAACd,cAAc,CAACkB,IAAI,CAACa,OAAO,CAAC,CAAC;IACxC;EACF,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG3B,QAAQ,CAACG,cAAc,CAAC;EAE1Cb,SAAS,CAAC,MAAM;IACdqB,aAAa,CAAC,CAAC;IACf,IAAIgB,SAAS,CAACb,OAAO,KAAK,KAAK,EAAE;MAC/B;MACAc,OAAO,CAACC,GAAG,CAACF,SAAS,CAACd,IAAI,CAACc,SAAS,CAAC;MACrClB,QAAQ,CAACb,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACe,aAAa,EAAEgB,SAAS,CAAC,CAAC;EAE9B,oBACErB,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACf,IAAI;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACR5B,OAAA,CAACd,QAAQ;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC1B,EAAA,CAlCQD,GAAG;EAAA,QACOd,WAAW,EAGuBM,WAAW,EAa5CC,QAAQ;AAAA;AAAAmC,EAAA,GAjBnB5B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}