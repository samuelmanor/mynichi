{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\n// @ts-ignore\nimport { GET_AVAILABLE_PAGES } from \"../../utils/queries\";\nimport { useSelector } from \"react-redux\";\n// @ts-ignore\n\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  // const dispatch = useDispatch();\n\n  const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n\n  // const [prevPageIndex, setPrevPageIndex] = useState<number | null>(null);\n  // const [nextPageIndex, setNextPageIndex] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (availablePages.data) {\n      // find index of the current page within the available pages\n      const currentPageIndex = availablePages.data.getAvailablePages.findIndex(id => id === currentPage.id);\n      console.log(currentPageIndex);\n    }\n  }, [availablePages.data, currentPage.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"uU/aYhRYzc1QvLDyO/kSlvy7EgE=\", false, function () {\n  return [useQuery, useSelector];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["useQuery","React","useEffect","GET_AVAILABLE_PAGES","useSelector","jsxDEV","_jsxDEV","NavArrow","_s","availablePages","currentPage","state","data","currentPageIndex","getAvailablePages","findIndex","id","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_AVAILABLE_PAGES, FIND_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { Page } from \"../../utils/gql\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  // const dispatch = useDispatch();\n\n  const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  // const [prevPageIndex, setPrevPageIndex] = useState<number | null>(null);\n  // const [nextPageIndex, setNextPageIndex] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (availablePages.data) {\n      // find index of the current page within the available pages\n      const currentPageIndex = availablePages.data.getAvailablePages.findIndex(\n        (id: string) => id === currentPage.id\n      );\n      console.log(currentPageIndex);\n    }\n  }, [availablePages.data, currentPage.id]);\n\n  return (\n    <div>\n      {/* <button\n        style={{ display: prevPageIndex !== null ? \"\" : \"none\" }}\n        onClick={() => {\n          console.log(prevPageIndex);\n        }}\n      >\n        prev page\n      </button>\n      <button\n        style={{ display: nextPageIndex !== null ? \"\" : \"none\" }}\n        onClick={() => {\n          console.log(nextPageIndex);\n        }}\n      >\n        next page\n      </button> */}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAAuBA,QAAQ,QAAQ,gBAAgB;AACvD,OAAOC,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAElD;AACA,SAASC,mBAAmB,QAAmB,qBAAqB;AACpE,SAAsBC,WAAW,QAAQ,aAAa;AACtD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C;;EAEA,MAAMC,cAAc,GAAGT,QAAQ,CAACG,mBAAmB,CAAC;EACpD,MAAMO,WAAW,GAAGN,WAAW,CAAEO,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;;EAElE;EACA;;EAEAR,SAAS,CAAC,MAAM;IACd,IAAIO,cAAc,CAACG,IAAI,EAAE;MACvB;MACA,MAAMC,gBAAgB,GAAGJ,cAAc,CAACG,IAAI,CAACE,iBAAiB,CAACC,SAAS,CACrEC,EAAU,IAAKA,EAAE,KAAKN,WAAW,CAACM,EACrC,CAAC;MACDC,OAAO,CAACC,GAAG,CAACL,gBAAgB,CAAC;IAC/B;EACF,CAAC,EAAE,CAACJ,cAAc,CAACG,IAAI,EAAEF,WAAW,CAACM,EAAE,CAAC,CAAC;EAEzC,oBACEV,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiBK,CAAC;AAEV,CAAC;AAACd,EAAA,CAvCWD,QAA2B;EAAA,QAGfP,QAAQ,EACXI,WAAW;AAAA;AAAAmB,EAAA,GAJpBhB,QAA2B;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}