{"ast":null,"code":"// uses given date to return a 2d array of the month's days\n\nimport { Date } from \"./getFormattedDate\";\nexport const formatMonth = date => {\n  const month = date.month;\n  const year = date.year;\n  const firstDay = new Date(year, month - 1, 1).getDay();\n  const lastDay = new Date(year, month, 0).getDate();\n  const monthArray = [];\n  let weekArray = [];\n  let day = 1;\n  for (let i = 0; i < firstDay; i++) {\n    weekArray.push(0);\n  }\n  while (day <= lastDay) {\n    weekArray.push(day);\n    day++;\n    if (weekArray.length === 7) {\n      monthArray.push(weekArray);\n      weekArray = [];\n    }\n  }\n  while (weekArray.length < 7) {\n    weekArray.push(0);\n  }\n  monthArray.push(weekArray);\n  console.log(monthArray);\n\n  // return monthArray;\n  return [[]];\n};","map":{"version":3,"names":["Date","formatMonth","date","month","year","firstDay","getDay","lastDay","getDate","monthArray","weekArray","day","i","push","length","console","log"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/utils/formatMonth.ts"],"sourcesContent":["// uses given date to return a 2d array of the month's days\n\nimport { Date } from \"./getFormattedDate\";\n\nexport const formatMonth = (date: Date): number[][] => {\n  const month = date.month;\n  const year = date.year;\n  const firstDay = new Date(year, month - 1, 1).getDay();\n  const lastDay = new Date(year, month, 0).getDate();\n  const monthArray: number[][] = [];\n  let weekArray: number[] = [];\n  let day = 1;\n\n  for (let i = 0; i < firstDay; i++) {\n    weekArray.push(0);\n  }\n\n  while (day <= lastDay) {\n    weekArray.push(day);\n    day++;\n    if (weekArray.length === 7) {\n      monthArray.push(weekArray);\n      weekArray = [];\n    }\n  }\n\n  while (weekArray.length < 7) {\n    weekArray.push(0);\n  }\n\n  monthArray.push(weekArray);\n\n  console.log(monthArray);\n\n  // return monthArray;\n  return [[]];\n};\n"],"mappings":"AAAA;;AAEA,SAASA,IAAI,QAAQ,oBAAoB;AAEzC,OAAO,MAAMC,WAAW,GAAIC,IAAU,IAAiB;EACrD,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;EACxB,MAAMC,IAAI,GAAGF,IAAI,CAACE,IAAI;EACtB,MAAMC,QAAQ,GAAG,IAAIL,IAAI,CAACI,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;EACtD,MAAMC,OAAO,GAAG,IAAIP,IAAI,CAACI,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;EAClD,MAAMC,UAAsB,GAAG,EAAE;EACjC,IAAIC,SAAmB,GAAG,EAAE;EAC5B,IAAIC,GAAG,GAAG,CAAC;EAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,EAAEO,CAAC,EAAE,EAAE;IACjCF,SAAS,CAACG,IAAI,CAAC,CAAC,CAAC;EACnB;EAEA,OAAOF,GAAG,IAAIJ,OAAO,EAAE;IACrBG,SAAS,CAACG,IAAI,CAACF,GAAG,CAAC;IACnBA,GAAG,EAAE;IACL,IAAID,SAAS,CAACI,MAAM,KAAK,CAAC,EAAE;MAC1BL,UAAU,CAACI,IAAI,CAACH,SAAS,CAAC;MAC1BA,SAAS,GAAG,EAAE;IAChB;EACF;EAEA,OAAOA,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;IAC3BJ,SAAS,CAACG,IAAI,CAAC,CAAC,CAAC;EACnB;EAEAJ,UAAU,CAACI,IAAI,CAACH,SAAS,CAAC;EAE1BK,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;;EAEvB;EACA,OAAO,CAAC,EAAE,CAAC;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}