{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage } from \"./reducers/PageReducer\";\nimport { addPage } from \"./reducers/JournalReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FIND_PAGE, ADD_PAGE } from \"./utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n  const todaysPage = useQuery(FIND_PAGE, {\n    variables: {\n      month: today.month,\n      dayNum: today.day.number,\n      year: today.year\n    }\n  });\n  _s(useEffect(_s(() => {\n    _s();\n    // if (todaysPage.data.findPage === null) {\n    //   // add page\n    // } else {\n    //   // set todays page to current page\n    //   dispatch(setCurrentPage(todaysPage.data.findPage));\n    // }\n    if (todaysPage.loading === false) {\n      console.log(\"done loading\");\n      if (todaysPage.data.findPage == null) {\n        console.log(\"adding page\");\n        const newPage = useQuery(ADD_PAGE, {\n          variables: {\n            month: today.month,\n            dayName: today.day.name,\n            dayNum: today.day.number,\n            year: today.year\n          }\n        });\n        console.log(newPage.data);\n      }\n    }\n  }, \"J0+JEtOcOC5pWiRNQnJM3gTQBzs=\", false, function () {\n    return [useQuery];\n  }), [todaysPage]), \"J0+JEtOcOC5pWiRNQnJM3gTQBzs=\", false, function () {\n    return [useQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"gDROvTnfdrUrYpU0Hd0/yCukWYc=\", false, function () {\n  return [useDispatch, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Page","useDispatch","useSelector","setCurrentPage","addPage","getFormattedDate","gql","useQuery","FIND_PAGE","ADD_PAGE","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","dispatch","today","todaysPage","variables","month","dayNum","day","number","year","loading","console","log","data","findPage","newPage","dayName","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Page } from \"./components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage } from \"./reducers/PageReducer\";\nimport { addPage } from \"./reducers/JournalReducer\";\nimport { getFormattedDate } from \"./utils/getFormattedDate\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { FIND_PAGE, ADD_PAGE } from \"./utils/queries\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n  const todaysPage = useQuery(FIND_PAGE, {\n    variables: {\n      month: today.month,\n      dayNum: today.day.number,\n      year: today.year,\n    },\n  });\n\n  useEffect(() => {\n    // if (todaysPage.data.findPage === null) {\n    //   // add page\n    // } else {\n    //   // set todays page to current page\n    //   dispatch(setCurrentPage(todaysPage.data.findPage));\n    // }\n    if (todaysPage.loading === false) {\n      console.log(\"done loading\");\n      if (todaysPage.data.findPage == null) {\n        console.log(\"adding page\");\n        const newPage = useQuery(ADD_PAGE, {\n          variables: {\n            month: today.month,\n            dayName: today.day.name,\n            dayNum: today.day.number,\n            year: today.year,\n          },\n        });\n        console.log(newPage.data);\n      }\n    }\n  }, [todaysPage]);\n\n  return (\n    <div>\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,KAAK,GAAGZ,gBAAgB,CAAC,CAAC;EAChC,MAAMa,UAAU,GAAGX,QAAQ,CAACC,SAAS,EAAE;IACrCW,SAAS,EAAE;MACTC,KAAK,EAAEH,KAAK,CAACG,KAAK;MAClBC,MAAM,EAAEJ,KAAK,CAACK,GAAG,CAACC,MAAM;MACxBC,IAAI,EAAEP,KAAK,CAACO;IACd;EACF,CAAC,CAAC;EAEFV,EAAA,CAAAf,SAAS,CAAAe,EAAA,CAAC,MAAM;IAAAA,EAAA;IACd;IACA;IACA;IACA;IACA;IACA;IACA,IAAII,UAAU,CAACO,OAAO,KAAK,KAAK,EAAE;MAChCC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,IAAIT,UAAU,CAACU,IAAI,CAACC,QAAQ,IAAI,IAAI,EAAE;QACpCH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,MAAMG,OAAO,GAAGvB,QAAQ,CAACE,QAAQ,EAAE;UACjCU,SAAS,EAAE;YACTC,KAAK,EAAEH,KAAK,CAACG,KAAK;YAClBW,OAAO,EAAEd,KAAK,CAACK,GAAG,CAACU,IAAI;YACvBX,MAAM,EAAEJ,KAAK,CAACK,GAAG,CAACC,MAAM;YACxBC,IAAI,EAAEP,KAAK,CAACO;UACd;QACF,CAAC,CAAC;QACFE,OAAO,CAACC,GAAG,CAACG,OAAO,CAACF,IAAI,CAAC;MAC3B;IACF;EACF,CAAC;IAAA,QAXqBrB,QAAQ;EAAA,IAW3B,CAACW,UAAU,CAAC,CAAC;IAAA,QAXMX,QAAQ;EAAA;EAa9B,oBACEI,OAAA;IAAAsB,QAAA,eACEtB,OAAA,CAACX,IAAI;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACxB,GAAA,CAzCQD,GAAG;EAAA,QACOX,WAAW,EAGTM,QAAQ;AAAA;AAAA+B,EAAA,GAJpB1B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}