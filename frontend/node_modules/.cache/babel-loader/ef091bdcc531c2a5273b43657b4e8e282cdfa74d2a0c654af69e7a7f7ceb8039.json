{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport { useLazyQuery } from \"@apollo/client\";\nimport React, { useCallback, useState } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  const [onLastPage, setOnLastPage] = useState(false);\n  const [onFirstPage, setOnFirstPage] = useState(false);\n  const dispatch = useDispatch();\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n  const setPage = useCallback(data => {\n    dispatch(setCurrentPage(data));\n  }, []);\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      // if (data.getNextPage) {\n      //   console.log(data.getNextPage);\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      // console.log(data.getNextPage);\n      // if (!data.getNextPage || data.getNextPage.page === null) {\n      //   setOnLastPage(true);\n      // } else {\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      // if (data.getNextPage && data.getNextPage.page !== null) {\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      console.log(data.getNextPage);\n      if (data.getNextPage.isEnd) {\n        setOnLastPage(true);\n      }\n      if (data.getNextPage && data.getNextPage.page !== null) {\n        // dispatch(setCurrentPage(data.getNextPage.page));\n        setPage(data.getNextPage.page);\n      }\n    }\n  });\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: {\n      id: currentPage.id\n    },\n    onCompleted: data => {\n      // if (data.getPreviousPage) {\n      //   console.log(data.getPreviousPage);\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      console.log(data.getPreviousPage);\n      // if (data.getPreviousPage && data.getPreviousPage.page !== null) {\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      if (data.getPreviousPage.isEnd) {\n        setOnFirstPage(true);\n      }\n      if (data.getPreviousPage && data.getPreviousPage.page !== null) {\n        // dispatch(setCurrentPage(data.getPreviousPage.page));\n        setPage(data.getPreviousPage.page);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getPreviousPage(),\n      disabled: onFirstPage,\n      children: \"get previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(currentPage),\n      children: \"current\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNextPage(),\n      disabled: onLastPage,\n      children: \"get next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"DL8Z9GAXtWpgd97l+koxplO5jbQ=\", false, function () {\n  return [useDispatch, useSelector, useLazyQuery, useLazyQuery];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["useLazyQuery","React","useCallback","useState","GET_NEXT_PAGE","GET_PREVIOUS_PAGE","useDispatch","useSelector","setCurrentPage","getFormattedDate","jsxDEV","_jsxDEV","NavArrow","_s","onLastPage","setOnLastPage","onFirstPage","setOnFirstPage","dispatch","today","currentPage","state","setPage","data","getNextPage","variables","id","onCompleted","console","log","isEnd","page","getPreviousPage","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/frontend/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_NEXT_PAGE, GET_PREVIOUS_PAGE } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// @ts-ignore\nimport { setCurrentPage } from \"../../reducers/PageReducer\";\nimport { getFormattedDate } from \"../../utils/getFormattedDate\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  const [onLastPage, setOnLastPage] = useState(false);\n  const [onFirstPage, setOnFirstPage] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const today = getFormattedDate();\n\n  // const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  const setPage = useCallback((data: Object) => {\n    dispatch(setCurrentPage(data));\n  }, []);\n\n  const [getNextPage] = useLazyQuery(GET_NEXT_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      // if (data.getNextPage) {\n      //   console.log(data.getNextPage);\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      // console.log(data.getNextPage);\n      // if (!data.getNextPage || data.getNextPage.page === null) {\n      //   setOnLastPage(true);\n      // } else {\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      // if (data.getNextPage && data.getNextPage.page !== null) {\n      //   if (data.getNextPage.isEnd) {\n      //     setOnLastPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getNextPage.page));\n      // }\n      console.log(data.getNextPage);\n      if (data.getNextPage.isEnd) {\n        setOnLastPage(true);\n      }\n      if (data.getNextPage && data.getNextPage.page !== null) {\n        // dispatch(setCurrentPage(data.getNextPage.page));\n        setPage(data.getNextPage.page);\n      }\n    },\n  });\n\n  const [getPreviousPage] = useLazyQuery(GET_PREVIOUS_PAGE, {\n    variables: { id: currentPage.id },\n    onCompleted: (data) => {\n      // if (data.getPreviousPage) {\n      //   console.log(data.getPreviousPage);\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      console.log(data.getPreviousPage);\n      // if (data.getPreviousPage && data.getPreviousPage.page !== null) {\n      //   if (data.getPreviousPage.isEnd) {\n      //     setOnFirstPage(true);\n      //   }\n      //   dispatch(setCurrentPage(data.getPreviousPage.page));\n      // }\n      if (data.getPreviousPage.isEnd) {\n        setOnFirstPage(true);\n      }\n      if (data.getPreviousPage && data.getPreviousPage.page !== null) {\n        // dispatch(setCurrentPage(data.getPreviousPage.page));\n        setPage(data.getPreviousPage.page);\n      }\n    },\n  });\n\n  return (\n    <div>\n      <button onClick={() => getPreviousPage()} disabled={onFirstPage}>\n        get previous\n      </button>\n      <button onClick={() => console.log(currentPage)}>current</button>\n      <button onClick={() => getNextPage()} disabled={onLastPage}>\n        get next\n      </button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,YAAY,QAAkB,gBAAgB;AACvD,OAAOC,KAAK,IAAIC,WAAW,EAAaC,QAAQ,QAAQ,OAAO;AAE/D;AACA,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,qBAAqB;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhE,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,KAAK,GAAGV,gBAAgB,CAAC,CAAC;;EAEhC;EACA,MAAMW,WAAW,GAAGb,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;EAElE,MAAME,OAAO,GAAGpB,WAAW,CAAEqB,IAAY,IAAK;IAC5CL,QAAQ,CAACV,cAAc,CAACe,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,WAAW,CAAC,GAAGxB,YAAY,CAACI,aAAa,EAAE;IAChDqB,SAAS,EAAE;MAAEC,EAAE,EAAEN,WAAW,CAACM;IAAG,CAAC;IACjCC,WAAW,EAAGJ,IAAI,IAAK;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAK,OAAO,CAACC,GAAG,CAACN,IAAI,CAACC,WAAW,CAAC;MAC7B,IAAID,IAAI,CAACC,WAAW,CAACM,KAAK,EAAE;QAC1Bf,aAAa,CAAC,IAAI,CAAC;MACrB;MACA,IAAIQ,IAAI,CAACC,WAAW,IAAID,IAAI,CAACC,WAAW,CAACO,IAAI,KAAK,IAAI,EAAE;QACtD;QACAT,OAAO,CAACC,IAAI,CAACC,WAAW,CAACO,IAAI,CAAC;MAChC;IACF;EACF,CAAC,CAAC;EAEF,MAAM,CAACC,eAAe,CAAC,GAAGhC,YAAY,CAACK,iBAAiB,EAAE;IACxDoB,SAAS,EAAE;MAAEC,EAAE,EAAEN,WAAW,CAACM;IAAG,CAAC;IACjCC,WAAW,EAAGJ,IAAI,IAAK;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACAK,OAAO,CAACC,GAAG,CAACN,IAAI,CAACS,eAAe,CAAC;MACjC;MACA;MACA;MACA;MACA;MACA;MACA,IAAIT,IAAI,CAACS,eAAe,CAACF,KAAK,EAAE;QAC9Bb,cAAc,CAAC,IAAI,CAAC;MACtB;MACA,IAAIM,IAAI,CAACS,eAAe,IAAIT,IAAI,CAACS,eAAe,CAACD,IAAI,KAAK,IAAI,EAAE;QAC9D;QACAT,OAAO,CAACC,IAAI,CAACS,eAAe,CAACD,IAAI,CAAC;MACpC;IACF;EACF,CAAC,CAAC;EAEF,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMF,eAAe,CAAC,CAAE;MAACG,QAAQ,EAAEnB,WAAY;MAAAiB,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT5B,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMN,OAAO,CAACC,GAAG,CAACT,WAAW,CAAE;MAAAa,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjE5B,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,CAAE;MAACW,QAAQ,EAAErB,UAAW;MAAAmB,QAAA,EAAC;IAE5D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtFWD,QAA2B;EAAA,QAIrBN,WAAW,EAKRC,WAAW,EAMTP,YAAY,EAiCRA,YAAY;AAAA;AAAAwC,EAAA,GAhD3B5B,QAA2B;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}