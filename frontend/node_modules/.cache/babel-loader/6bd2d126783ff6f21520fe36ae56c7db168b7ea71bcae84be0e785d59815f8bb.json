{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\n// @ts-ignore\nimport { GET_AVAILABLE_PAGES } from \"../../utils/queries\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavArrow = () => {\n  _s();\n  const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector(state => state.currentPage);\n  const previousDayExists = () => {\n    const previousDay = availablePages.data.getAvailablePages.find(page => {\n      return page.date.month === currentPage.date.month && page.date.day.number === currentPage.date.day.number - 1;\n    });\n    if (previousDay) {\n      console.log(previousDay);\n      return true;\n    }\n    // console.log(currentPage.date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => previousDayExists(),\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NavArrow, \"FCstGby1Z8+IC4G1Dx1veYGOdFI=\", false, function () {\n  return [useQuery, useSelector];\n});\n_c = NavArrow;\nvar _c;\n$RefreshReg$(_c, \"NavArrow\");","map":{"version":3,"names":["useQuery","React","GET_AVAILABLE_PAGES","useSelector","jsxDEV","_jsxDEV","NavArrow","_s","availablePages","currentPage","state","previousDayExists","previousDay","data","getAvailablePages","find","page","date","month","day","number","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/NavArrow/NavArrow.tsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { FC } from \"react\";\n// @ts-ignore\nimport { GET_AVAILABLE_PAGES } from \"../../utils/queries\";\nimport { useSelector } from \"react-redux\";\n\ninterface NavArrowProps {}\n\nexport const NavArrow: FC<NavArrowProps> = () => {\n  const availablePages = useQuery(GET_AVAILABLE_PAGES);\n  const currentPage = useSelector((state: any) => state.currentPage);\n\n  const previousDayExists = () => {\n    const previousDay = availablePages.data.getAvailablePages.find(\n      (page: any) => {\n        return (\n          page.date.month === currentPage.date.month &&\n          page.date.day.number === currentPage.date.day.number - 1\n        );\n      }\n    );\n\n    if (previousDay) {\n      console.log(previousDay);\n      return true;\n    }\n    // console.log(currentPage.date);\n  };\n\n  return (\n    <div>\n      {/* <button\n        onClick={() => console.log(availablePages.data.getAvailablePages)}\n      >\n        NavArrow\n      </button>\n      <button onClick={() => console.log(todaysPage)}>Todays Page</button> */}\n      <button onClick={() => previousDayExists()}>test</button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB;AACA,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1C,OAAO,MAAMC,QAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/C,MAAMC,cAAc,GAAGR,QAAQ,CAACE,mBAAmB,CAAC;EACpD,MAAMO,WAAW,GAAGN,WAAW,CAAEO,KAAU,IAAKA,KAAK,CAACD,WAAW,CAAC;EAElE,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAGJ,cAAc,CAACK,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAC3DC,IAAS,IAAK;MACb,OACEA,IAAI,CAACC,IAAI,CAACC,KAAK,KAAKT,WAAW,CAACQ,IAAI,CAACC,KAAK,IAC1CF,IAAI,CAACC,IAAI,CAACE,GAAG,CAACC,MAAM,KAAKX,WAAW,CAACQ,IAAI,CAACE,GAAG,CAACC,MAAM,GAAG,CAAC;IAE5D,CACF,CAAC;IAED,IAAIR,WAAW,EAAE;MACfS,OAAO,CAACC,GAAG,CAACV,WAAW,CAAC;MACxB,OAAO,IAAI;IACb;IACA;EACF,CAAC;EAED,oBACEP,OAAA;IAAAkB,QAAA,eAOElB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAAC,CAAE;MAAAY,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCWD,QAA2B;EAAA,QACfN,QAAQ,EACXG,WAAW;AAAA;AAAA0B,EAAA,GAFpBvB,QAA2B;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}